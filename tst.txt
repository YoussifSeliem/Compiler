Token<KEYWORD, int>
Token<KEYWORD, main>
Token<SPECIAL CHARACTER, (>
Token<SPECIAL CHARACTER, )>
Token<SPECIAL CHARACTER, {>
Token<KEYWORD, if>
Token<SPECIAL CHARACTER, (>
Token<IDENTIFIER, x>
Token<OPERATOR, =>
Token<OPERATOR, =>
Token<NUMBER, 42>
Token<SPECIAL CHARACTER, )>
Token<SPECIAL CHARACTER, {>
Token<KEYWORD, for>
Token<SPECIAL CHARACTER, (>
Token<KEYWORD, int>
Token<IDENTIFIER, i>
Token<OPERATOR, =>
Token<NUMBER, 0>
Token<SPECIAL CHARACTER, ;>
Token<IDENTIFIER, i>
Token<OPERATOR, <>
Token<NUMBER, 10>
Token<SPECIAL CHARACTER, ;>
Token<IDENTIFIER, i>
Token<OPERATOR, +>
Token<OPERATOR, +>
Token<SPECIAL CHARACTER, )>
Token<SPECIAL CHARACTER, {>
Token<IDENTIFIER, y>
Token<OPERATOR, =>
Token<IDENTIFIER, y>
Token<OPERATOR, +>
Token<IDENTIFIER, i>
Token<SPECIAL CHARACTER, ;>
Token<SPECIAL CHARACTER, }>
Token<SPECIAL CHARACTER, }>
Token<KEYWORD, else>
Token<SPECIAL CHARACTER, {>
Token<IDENTIFIER, y>
Token<OPERATOR, =>
Token<NUMBER, 3.1>
Token<SPECIAL CHARACTER, ;>
Token<SPECIAL CHARACTER, }>
Token<KEYWORD, if>
Token<SPECIAL CHARACTER, (>
Token<IDENTIFIER, x>
Token<OPERATOR, =>
Token<OPERATOR, =>
Token<NUMBER, 5>
Token<OPERATOR, &>
Token<OPERATOR, &>
Token<IDENTIFIER, y>
Token<OPERATOR, >>
Token<IDENTIFIER, z>
Token<SPECIAL CHARACTER, )>
Token<KEYWORD, printf>
Token<SPECIAL CHARACTER, (>
Token<SPECIAL CHARACTER, ">
Token<IDENTIFIER, good>
Token<SPECIAL CHARACTER, \>
Token<IDENTIFIER, n>
Token<SPECIAL CHARACTER, ">
Token<SPECIAL CHARACTER, )>
Token<SPECIAL CHARACTER, ;>
Token<KEYWORD, return>
Token<NUMBER, 0>
Token<SPECIAL CHARACTER, ;>
Token<SPECIAL CHARACTER, }>